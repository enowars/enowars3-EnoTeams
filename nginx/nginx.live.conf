
user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log  warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    keepalive_timeout  65;

    server {
        listen      80 default_server;
        listen [::]:80 default_server;
        server_name  enowars.com wars.eno.host;

        # Cert bot verification location
        location /.well-known/acme-challenge/ {
           root /var/www/certbot;
        }

        location = /robots.txt {
            add_header Content-Type text/plain;
            return 200 "User-agent: *\nDisallow:\n";
        }

        if ($host = enowars.com) {
        return 301 https://$host$request_uri;
         }

         if ($host = wars.eno.host) {
        return 301 https://$host$request_uri;
         }
    }

    server {
        server_name www.enowars.com;
        return 301 $scheme://enowars.com$request_uri;
    }

    server {
        listen 443 ssl;
        server_name  enowars.com wars.eno.host;

        ssl_certificate /etc/letsencrypt/live/enowars.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/enowars.com/privkey.pem;
        include /etc/letsencrypt/options-ssl-nginx.conf;
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
    
        add_header  X-Frame-Options "deny";
        add_header  X-Content-Type-Options "nosniff";
        add_header  X-XSS-Protection "1; mode=block";
        #add_header  Content-Security-Policy "default-src 'self'";
        add_header  Referrer-Policy "same-origin";
        # TODO feature policy

        location = /robots.txt {
            add_header Content-Type text/plain;
            return 200 "User-agent: *\nDisallow:\n";
        }

        location / {
            root   /usr/share/nginx/html;
            index  /index.html;
        }

        location ~ /(logo|download|secret/export) {
            proxy_set_header  Host  $host;
            proxy_set_header  X-Forwarded-For  $proxy_add_x_forwarded_for;
            proxy_pass  http://gunicorn:8000;
        }

        location ~ /(index|legal|login|logout|register|verify|reset|change-password|edit|upload|teams|downloads)\.html {
            proxy_set_header  Host  $host;
            proxy_set_header  X-Forwarded-For  $proxy_add_x_forwarded_for;
            proxy_pass  http://gunicorn:8000;
        }
    }

    map $remote_addr $ip_anonym1 {
        default 0.0.0;
        "~(?P<ip>(\d+)\.(\d+)\.(\d+))\.\d+" $ip;
        "~(?P<ip>[^:]+:[^:]+):" $ip;
    }

    map $remote_addr $ip_anonym2 {
         default .0;
         "~(?P<ip>(\d+)\.(\d+)\.(\d+))\.\d+" .0;
         "~(?P<ip>[^:]+:[^:]+):" ::;
    }

    map $ip_anonym1$ip_anonym2 $ip_anonymized {
         default 0.0.0.0;
         "~(?P<ip>.*)" $ip;
    }

    log_format anonymized '$ip_anonymized - $remote_user [$time_local] '
       '"$request" $status $body_bytes_sent '
       '"$http_referer" "$http_user_agent"';

    access_log /var/log/nginx/access.log anonymized;
}
